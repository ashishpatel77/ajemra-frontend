{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getDisplayName;\nexports.getFunctionName = getFunctionName;\n\nvar _reactIs = require(\"react-is\"); // Simplified polyfill for IE11 support\n// https://github.com/JamesMGreene/Function.name/blob/58b314d4a983110c3682f1228f845d39ccca1817/Function.name.js#L3\n\n\nconst fnNameMatchRegex = /^\\s*function(?:\\s|\\s*\\/\\*.*\\*\\/\\s*)+([^(\\s/]*)\\s*/;\n\nfunction getFunctionName(fn) {\n  const match = `${fn}`.match(fnNameMatchRegex);\n  const name = match && match[1];\n  return name || '';\n}\n\nfunction getFunctionComponentName(Component) {\n  let fallback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  return Component.displayName || Component.name || getFunctionName(Component) || fallback;\n}\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  const functionName = getFunctionComponentName(innerType);\n  return outerType.displayName || (functionName !== '' ? `${wrapperName}(${functionName})` : wrapperName);\n}\n/**\n * cherry-pick from\n * https://github.com/facebook/react/blob/769b1f270e1251d9dbdce0fcbd9e92e502d059b8/packages/shared/getComponentName.js\n * originally forked from recompose/getDisplayName with added IE11 support\n */\n\n\nfunction getDisplayName(Component) {\n  if (Component == null) {\n    return undefined;\n  }\n\n  if (typeof Component === 'string') {\n    return Component;\n  }\n\n  if (typeof Component === 'function') {\n    return getFunctionComponentName(Component, 'Component');\n  } // TypeScript can't have components as objects but they exist in the form of `memo` or `Suspense`\n\n\n  if (typeof Component === 'object') {\n    switch (Component.$$typeof) {\n      case _reactIs.ForwardRef:\n        return getWrappedName(Component, Component.render, 'ForwardRef');\n\n      case _reactIs.Memo:\n        return getWrappedName(Component, Component.type, 'memo');\n\n      default:\n        return undefined;\n    }\n  }\n\n  return undefined;\n}","map":{"version":3,"sources":["D:/Full Stack Projects/ajmera-infotech/books-frontend/node_modules/@mui/utils/getDisplayName.js"],"names":["Object","defineProperty","exports","value","default","getDisplayName","getFunctionName","_reactIs","require","fnNameMatchRegex","fn","match","name","getFunctionComponentName","Component","fallback","displayName","getWrappedName","outerType","innerType","wrapperName","functionName","undefined","$$typeof","ForwardRef","render","Memo","type"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,cAAlB;AACAH,OAAO,CAACI,eAAR,GAA0BA,eAA1B;;AACA,IAAIC,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB,C,CACA;AACA;;;AACA,MAAMC,gBAAgB,GAAG,mDAAzB;;AACA,SAASH,eAAT,CAAyBI,EAAzB,EAA6B;AAC3B,QAAMC,KAAK,GAAI,GAAED,EAAG,EAAN,CAAQC,KAAR,CAAcF,gBAAd,CAAd;AACA,QAAMG,IAAI,GAAGD,KAAK,IAAIA,KAAK,CAAC,CAAD,CAA3B;AACA,SAAOC,IAAI,IAAI,EAAf;AACD;;AACD,SAASC,wBAAT,CAAkCC,SAAlC,EAA4D;AAAA,MAAfC,QAAe,uEAAJ,EAAI;AAC1D,SAAOD,SAAS,CAACE,WAAV,IAAyBF,SAAS,CAACF,IAAnC,IAA2CN,eAAe,CAACQ,SAAD,CAA1D,IAAyEC,QAAhF;AACD;;AACD,SAASE,cAAT,CAAwBC,SAAxB,EAAmCC,SAAnC,EAA8CC,WAA9C,EAA2D;AACzD,QAAMC,YAAY,GAAGR,wBAAwB,CAACM,SAAD,CAA7C;AACA,SAAOD,SAAS,CAACF,WAAV,KAA0BK,YAAY,KAAK,EAAjB,GAAuB,GAAED,WAAY,IAAGC,YAAa,GAArD,GAA0DD,WAApF,CAAP;AACD;AAED;AACA;AACA;AACA;AACA;;;AACA,SAASf,cAAT,CAAwBS,SAAxB,EAAmC;AACjC,MAAIA,SAAS,IAAI,IAAjB,EAAuB;AACrB,WAAOQ,SAAP;AACD;;AACD,MAAI,OAAOR,SAAP,KAAqB,QAAzB,EAAmC;AACjC,WAAOA,SAAP;AACD;;AACD,MAAI,OAAOA,SAAP,KAAqB,UAAzB,EAAqC;AACnC,WAAOD,wBAAwB,CAACC,SAAD,EAAY,WAAZ,CAA/B;AACD,GATgC,CAWjC;;;AACA,MAAI,OAAOA,SAAP,KAAqB,QAAzB,EAAmC;AACjC,YAAQA,SAAS,CAACS,QAAlB;AACE,WAAKhB,QAAQ,CAACiB,UAAd;AACE,eAAOP,cAAc,CAACH,SAAD,EAAYA,SAAS,CAACW,MAAtB,EAA8B,YAA9B,CAArB;;AACF,WAAKlB,QAAQ,CAACmB,IAAd;AACE,eAAOT,cAAc,CAACH,SAAD,EAAYA,SAAS,CAACa,IAAtB,EAA4B,MAA5B,CAArB;;AACF;AACE,eAAOL,SAAP;AANJ;AAQD;;AACD,SAAOA,SAAP;AACD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getDisplayName;\nexports.getFunctionName = getFunctionName;\nvar _reactIs = require(\"react-is\");\n// Simplified polyfill for IE11 support\n// https://github.com/JamesMGreene/Function.name/blob/58b314d4a983110c3682f1228f845d39ccca1817/Function.name.js#L3\nconst fnNameMatchRegex = /^\\s*function(?:\\s|\\s*\\/\\*.*\\*\\/\\s*)+([^(\\s/]*)\\s*/;\nfunction getFunctionName(fn) {\n  const match = `${fn}`.match(fnNameMatchRegex);\n  const name = match && match[1];\n  return name || '';\n}\nfunction getFunctionComponentName(Component, fallback = '') {\n  return Component.displayName || Component.name || getFunctionName(Component) || fallback;\n}\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  const functionName = getFunctionComponentName(innerType);\n  return outerType.displayName || (functionName !== '' ? `${wrapperName}(${functionName})` : wrapperName);\n}\n\n/**\n * cherry-pick from\n * https://github.com/facebook/react/blob/769b1f270e1251d9dbdce0fcbd9e92e502d059b8/packages/shared/getComponentName.js\n * originally forked from recompose/getDisplayName with added IE11 support\n */\nfunction getDisplayName(Component) {\n  if (Component == null) {\n    return undefined;\n  }\n  if (typeof Component === 'string') {\n    return Component;\n  }\n  if (typeof Component === 'function') {\n    return getFunctionComponentName(Component, 'Component');\n  }\n\n  // TypeScript can't have components as objects but they exist in the form of `memo` or `Suspense`\n  if (typeof Component === 'object') {\n    switch (Component.$$typeof) {\n      case _reactIs.ForwardRef:\n        return getWrappedName(Component, Component.render, 'ForwardRef');\n      case _reactIs.Memo:\n        return getWrappedName(Component, Component.type, 'memo');\n      default:\n        return undefined;\n    }\n  }\n  return undefined;\n}"]},"metadata":{},"sourceType":"script"}