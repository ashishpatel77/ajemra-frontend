{"ast":null,"code":"var _jsxFileName = \"D:\\\\Full Stack Projects\\\\bookstore\\\\books-frontend\\\\src\\\\components\\\\UpdateBook.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UpdateBook() {\n  _s();\n\n  const [bookData, setBookData] = useState(null);\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    axios.get(`http://localhost:5000/books/${id}`).then(res => {\n      console.log(res.data.books);\n      setBookData(res.data.books);\n    }).catch(err => console.log(err));\n  }, []);\n\n  const handleChange = e => {\n    setBookData(prevState => ({ ...prevState,\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const sendData = async () => {\n    const bookObj = {\n      name: bookData.name,\n      author: bookData.author,\n      desc: bookData.desc,\n      price: bookData.price,\n      available: checked,\n      img: bookData.img\n    };\n    await axios.post(URL, bookObj).then(res => {\n      console.log(res.data);\n      history(\"/allbooks\");\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      flexDirection: \"column\",\n      maxWidth: 700,\n      marginTop: 10,\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        value: bookData.name,\n        onChange: handleChange,\n        fullWidth: true,\n        name: \"name\",\n        variant: \"outlined\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n        children: \"Author\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        value: bookData.author,\n        onChange: handleChange,\n        fullWidth: true,\n        name: \"author\",\n        variant: \"outlined\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        value: bookData.desc,\n        onChange: handleChange,\n        fullWidth: true,\n        name: \"desc\",\n        variant: \"outlined\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n        children: \"Price\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        value: bookData.price,\n        onChange: handleChange,\n        type: \"number\",\n        fullWidth: true,\n        name: \"price\",\n        variant: \"outlined\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n        children: \"Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        value: bookData.img,\n        onChange: handleChange,\n        fullWidth: true,\n        name: \"img\",\n        variant: \"outlined\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        control: /*#__PURE__*/_jsxDEV(Checkbox, {\n          checked: checked,\n          onChange: () => setChecked(!checked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this),\n        label: \"Available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        type: \"submit\",\n        children: \"Add Book\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UpdateBook, \"BOTOEf/7j4U6rDWZNUpeELJTXYI=\", false, function () {\n  return [useParams];\n});\n\n_c = UpdateBook;\nexport default UpdateBook;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateBook\");","map":{"version":3,"sources":["D:/Full Stack Projects/bookstore/books-frontend/src/components/UpdateBook.js"],"names":["axios","React","useEffect","useState","useParams","UpdateBook","bookData","setBookData","id","get","then","res","console","log","data","books","catch","err","handleChange","e","prevState","target","name","value","sendData","bookObj","author","desc","price","available","checked","img","post","URL","history","handleSubmit","setChecked"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nfunction UpdateBook() {\r\n  const [bookData, setBookData] = useState(null);\r\n  const { id } = useParams();\r\n  useEffect(() => {\r\n    axios\r\n      .get(`http://localhost:5000/books/${id}`)\r\n      .then((res) => {\r\n        console.log(res.data.books);\r\n        setBookData(res.data.books);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n  const handleChange = (e) => {\r\n    setBookData((prevState) => ({\r\n      ...prevState,\r\n      [e.target.name]: e.target.value,\r\n    }));\r\n  };\r\n\r\n  const sendData = async () => {\r\n    const bookObj = {\r\n      name: bookData.name,\r\n      author: bookData.author,\r\n      desc: bookData.desc,\r\n      price: bookData.price,\r\n      available: checked,\r\n      img: bookData.img,\r\n    };\r\n    await axios.post(URL, bookObj).then((res) => {\r\n      console.log(res.data);\r\n      history(\"/allbooks\");\r\n    });\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <Box\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n        maxWidth={700}\r\n        marginTop={10}\r\n        marginLeft=\"auto\"\r\n        marginRight=\"auto\"\r\n      >\r\n        <FormLabel>Name</FormLabel>\r\n        <TextField\r\n          value={bookData.name}\r\n          onChange={handleChange}\r\n          fullWidth\r\n          name=\"name\"\r\n          variant=\"outlined\"\r\n        />\r\n        <FormLabel>Author</FormLabel>\r\n        <TextField\r\n          value={bookData.author}\r\n          onChange={handleChange}\r\n          fullWidth\r\n          name=\"author\"\r\n          variant=\"outlined\"\r\n        />\r\n        <FormLabel>Description</FormLabel>\r\n        <TextField\r\n          value={bookData.desc}\r\n          onChange={handleChange}\r\n          fullWidth\r\n          name=\"desc\"\r\n          variant=\"outlined\"\r\n        />\r\n        <FormLabel>Price</FormLabel>\r\n        <TextField\r\n          value={bookData.price}\r\n          onChange={handleChange}\r\n          type=\"number\"\r\n          fullWidth\r\n          name=\"price\"\r\n          variant=\"outlined\"\r\n        />\r\n        <FormLabel>Image</FormLabel>\r\n        <TextField\r\n          value={bookData.img}\r\n          onChange={handleChange}\r\n          fullWidth\r\n          name=\"img\"\r\n          variant=\"outlined\"\r\n        />\r\n        <FormControlLabel\r\n          control={\r\n            <Checkbox checked={checked} onChange={() => setChecked(!checked)} />\r\n          }\r\n          label=\"Available\"\r\n        />\r\n        <Button variant=\"contained\" type=\"submit\">\r\n          Add Book\r\n        </Button>\r\n      </Box>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default UpdateBook;\r\n"]},"metadata":{},"sourceType":"module"}