{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createGetCssVar = void 0;\nexports.default = extendTheme;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n\nvar _utils = require(\"@mui/utils\");\n\nvar _system = require(\"@mui/system\");\n\nvar _createTheme = _interopRequireDefault(require(\"./createTheme\"));\n\nvar _getOverlayAlpha = _interopRequireDefault(require(\"./getOverlayAlpha\"));\n\nconst _excluded = [\"colorSchemes\", \"cssVarPrefix\"],\n      _excluded2 = [\"palette\"];\nconst defaultDarkOverlays = [...Array(25)].map((_, index) => {\n  if (index === 0) {\n    return undefined;\n  }\n\n  const overlay = (0, _getOverlayAlpha.default)(index);\n  return `linear-gradient(rgba(255 255 255 / ${overlay}), rgba(255 255 255 / ${overlay}))`;\n});\n\nfunction assignNode(obj, keys) {\n  keys.forEach(k => {\n    if (!obj[k]) {\n      obj[k] = {};\n    }\n  });\n}\n\nfunction setColor(obj, key, defaultValue) {\n  if (!obj[key] && defaultValue) {\n    obj[key] = defaultValue;\n  }\n}\n\nconst silent = fn => {\n  try {\n    return fn();\n  } catch (error) {// ignore error\n  }\n\n  return undefined;\n};\n\nconst createGetCssVar = function () {\n  let cssVarPrefix = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'mui';\n  return (0, _system.unstable_createGetCssVar)(cssVarPrefix);\n};\n\nexports.createGetCssVar = createGetCssVar;\n\nfunction extendTheme() {\n  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var _colorSchemesInput$li, _colorSchemesInput$da, _colorSchemesInput$li2, _colorSchemesInput$li3, _colorSchemesInput$da2, _colorSchemesInput$da3;\n\n  const {\n    colorSchemes: colorSchemesInput = {},\n    cssVarPrefix = 'mui'\n  } = options,\n        input = (0, _objectWithoutPropertiesLoose2.default)(options, _excluded);\n  const getCssVar = createGetCssVar(cssVarPrefix);\n\n  const _createThemeWithoutVa = (0, _createTheme.default)((0, _extends2.default)({}, input, colorSchemesInput.light && {\n    palette: (_colorSchemesInput$li = colorSchemesInput.light) == null ? void 0 : _colorSchemesInput$li.palette\n  })),\n        {\n    palette: lightPalette\n  } = _createThemeWithoutVa,\n        muiTheme = (0, _objectWithoutPropertiesLoose2.default)(_createThemeWithoutVa, _excluded2);\n\n  const {\n    palette: darkPalette\n  } = (0, _createTheme.default)({\n    palette: (0, _extends2.default)({\n      mode: 'dark'\n    }, (_colorSchemesInput$da = colorSchemesInput.dark) == null ? void 0 : _colorSchemesInput$da.palette)\n  });\n  let theme = (0, _extends2.default)({}, muiTheme, {\n    cssVarPrefix,\n    getCssVar,\n    colorSchemes: (0, _extends2.default)({}, colorSchemesInput, {\n      light: (0, _extends2.default)({}, colorSchemesInput.light, {\n        palette: lightPalette,\n        opacity: (0, _extends2.default)({\n          inputPlaceholder: 0.42,\n          inputUnderline: 0.42,\n          switchTrackDisabled: 0.12,\n          switchTrack: 0.38\n        }, (_colorSchemesInput$li2 = colorSchemesInput.light) == null ? void 0 : _colorSchemesInput$li2.opacity),\n        overlays: ((_colorSchemesInput$li3 = colorSchemesInput.light) == null ? void 0 : _colorSchemesInput$li3.overlays) || []\n      }),\n      dark: (0, _extends2.default)({}, colorSchemesInput.dark, {\n        palette: darkPalette,\n        opacity: (0, _extends2.default)({\n          inputPlaceholder: 0.5,\n          inputUnderline: 0.7,\n          switchTrackDisabled: 0.2,\n          switchTrack: 0.3\n        }, (_colorSchemesInput$da2 = colorSchemesInput.dark) == null ? void 0 : _colorSchemesInput$da2.opacity),\n        overlays: ((_colorSchemesInput$da3 = colorSchemesInput.dark) == null ? void 0 : _colorSchemesInput$da3.overlays) || defaultDarkOverlays\n      })\n    })\n  });\n  Object.keys(theme.colorSchemes).forEach(key => {\n    const palette = theme.colorSchemes[key].palette; // attach black & white channels to common node\n\n    if (key === 'light') {\n      setColor(palette.common, 'background', '#fff');\n      setColor(palette.common, 'onBackground', '#000');\n    } else {\n      setColor(palette.common, 'background', '#000');\n      setColor(palette.common, 'onBackground', '#fff');\n    } // assign component variables\n\n\n    assignNode(palette, ['Alert', 'AppBar', 'Avatar', 'Chip', 'FilledInput', 'LinearProgress', 'Skeleton', 'Slider', 'SnackbarContent', 'SpeedDialAction', 'StepConnector', 'StepContent', 'Switch', 'TableCell', 'Tooltip']);\n\n    if (key === 'light') {\n      setColor(palette.Alert, 'errorColor', (0, _system.private_safeDarken)(palette.error.light, 0.6));\n      setColor(palette.Alert, 'infoColor', (0, _system.private_safeDarken)(palette.info.light, 0.6));\n      setColor(palette.Alert, 'successColor', (0, _system.private_safeDarken)(palette.success.light, 0.6));\n      setColor(palette.Alert, 'warningColor', (0, _system.private_safeDarken)(palette.warning.light, 0.6));\n      setColor(palette.Alert, 'errorFilledBg', getCssVar('palette-error-main'));\n      setColor(palette.Alert, 'infoFilledBg', getCssVar('palette-info-main'));\n      setColor(palette.Alert, 'successFilledBg', getCssVar('palette-success-main'));\n      setColor(palette.Alert, 'warningFilledBg', getCssVar('palette-warning-main'));\n      setColor(palette.Alert, 'errorFilledColor', silent(() => lightPalette.getContrastText(palette.error.main)));\n      setColor(palette.Alert, 'infoFilledColor', silent(() => lightPalette.getContrastText(palette.info.main)));\n      setColor(palette.Alert, 'successFilledColor', silent(() => lightPalette.getContrastText(palette.success.main)));\n      setColor(palette.Alert, 'warningFilledColor', silent(() => lightPalette.getContrastText(palette.warning.main)));\n      setColor(palette.Alert, 'errorStandardBg', (0, _system.private_safeLighten)(palette.error.light, 0.9));\n      setColor(palette.Alert, 'infoStandardBg', (0, _system.private_safeLighten)(palette.info.light, 0.9));\n      setColor(palette.Alert, 'successStandardBg', (0, _system.private_safeLighten)(palette.success.light, 0.9));\n      setColor(palette.Alert, 'warningStandardBg', (0, _system.private_safeLighten)(palette.warning.light, 0.9));\n      setColor(palette.Alert, 'errorIconColor', getCssVar('palette-error-main'));\n      setColor(palette.Alert, 'infoIconColor', getCssVar('palette-info-main'));\n      setColor(palette.Alert, 'successIconColor', getCssVar('palette-success-main'));\n      setColor(palette.Alert, 'warningIconColor', getCssVar('palette-warning-main'));\n      setColor(palette.AppBar, 'defaultBg', getCssVar('palette-grey-100'));\n      setColor(palette.Avatar, 'defaultBg', getCssVar('palette-grey-400'));\n      setColor(palette.Chip, 'defaultBorder', getCssVar('palette-grey-400'));\n      setColor(palette.Chip, 'defaultAvatarColor', getCssVar('palette-grey-700'));\n      setColor(palette.Chip, 'defaultIconColor', getCssVar('palette-grey-700'));\n      setColor(palette.FilledInput, 'bg', 'rgba(0, 0, 0, 0.06)');\n      setColor(palette.FilledInput, 'hoverBg', 'rgba(0, 0, 0, 0.09)');\n      setColor(palette.FilledInput, 'disabledBg', 'rgba(0, 0, 0, 0.12)');\n      setColor(palette.LinearProgress, 'primaryBg', (0, _system.private_safeLighten)(palette.primary.main, 0.62));\n      setColor(palette.LinearProgress, 'secondaryBg', (0, _system.private_safeLighten)(palette.secondary.main, 0.62));\n      setColor(palette.LinearProgress, 'errorBg', (0, _system.private_safeLighten)(palette.error.main, 0.62));\n      setColor(palette.LinearProgress, 'infoBg', (0, _system.private_safeLighten)(palette.info.main, 0.62));\n      setColor(palette.LinearProgress, 'successBg', (0, _system.private_safeLighten)(palette.success.main, 0.62));\n      setColor(palette.LinearProgress, 'warningBg', (0, _system.private_safeLighten)(palette.warning.main, 0.62));\n      setColor(palette.Skeleton, 'bg', `rgba(${getCssVar('palette-text-primaryChannel')} / 0.11)`);\n      setColor(palette.Slider, 'primaryTrack', (0, _system.private_safeLighten)(palette.primary.main, 0.62));\n      setColor(palette.Slider, 'secondaryTrack', (0, _system.private_safeLighten)(palette.secondary.main, 0.62));\n      setColor(palette.Slider, 'errorTrack', (0, _system.private_safeLighten)(palette.error.main, 0.62));\n      setColor(palette.Slider, 'infoTrack', (0, _system.private_safeLighten)(palette.info.main, 0.62));\n      setColor(palette.Slider, 'successTrack', (0, _system.private_safeLighten)(palette.success.main, 0.62));\n      setColor(palette.Slider, 'warningTrack', (0, _system.private_safeLighten)(palette.warning.main, 0.62));\n      const snackbarContentBackground = (0, _system.private_safeEmphasize)(palette.background.default, 0.8);\n      setColor(palette.SnackbarContent, 'bg', snackbarContentBackground);\n      setColor(palette.SnackbarContent, 'color', silent(() => lightPalette.getContrastText(snackbarContentBackground)));\n      setColor(palette.SpeedDialAction, 'fabHoverBg', (0, _system.private_safeEmphasize)(palette.background.paper, 0.15));\n      setColor(palette.StepConnector, 'border', getCssVar('palette-grey-400'));\n      setColor(palette.StepContent, 'border', getCssVar('palette-grey-400'));\n      setColor(palette.Switch, 'defaultColor', getCssVar('palette-common-white'));\n      setColor(palette.Switch, 'defaultDisabledColor', getCssVar('palette-grey-100'));\n      setColor(palette.Switch, 'primaryDisabledColor', (0, _system.private_safeLighten)(palette.primary.main, 0.62));\n      setColor(palette.Switch, 'secondaryDisabledColor', (0, _system.private_safeLighten)(palette.secondary.main, 0.62));\n      setColor(palette.Switch, 'errorDisabledColor', (0, _system.private_safeLighten)(palette.error.main, 0.62));\n      setColor(palette.Switch, 'infoDisabledColor', (0, _system.private_safeLighten)(palette.info.main, 0.62));\n      setColor(palette.Switch, 'successDisabledColor', (0, _system.private_safeLighten)(palette.success.main, 0.62));\n      setColor(palette.Switch, 'warningDisabledColor', (0, _system.private_safeLighten)(palette.warning.main, 0.62));\n      setColor(palette.TableCell, 'border', (0, _system.private_safeLighten)((0, _system.private_safeAlpha)(palette.divider, 1), 0.88));\n      setColor(palette.Tooltip, 'bg', (0, _system.private_safeAlpha)(palette.grey[700], 0.92));\n    } else {\n      setColor(palette.Alert, 'errorColor', (0, _system.private_safeLighten)(palette.error.light, 0.6));\n      setColor(palette.Alert, 'infoColor', (0, _system.private_safeLighten)(palette.info.light, 0.6));\n      setColor(palette.Alert, 'successColor', (0, _system.private_safeLighten)(palette.success.light, 0.6));\n      setColor(palette.Alert, 'warningColor', (0, _system.private_safeLighten)(palette.warning.light, 0.6));\n      setColor(palette.Alert, 'errorFilledBg', getCssVar('palette-error-dark'));\n      setColor(palette.Alert, 'infoFilledBg', getCssVar('palette-info-dark'));\n      setColor(palette.Alert, 'successFilledBg', getCssVar('palette-success-dark'));\n      setColor(palette.Alert, 'warningFilledBg', getCssVar('palette-warning-dark'));\n      setColor(palette.Alert, 'errorFilledColor', silent(() => darkPalette.getContrastText(palette.error.dark)));\n      setColor(palette.Alert, 'infoFilledColor', silent(() => darkPalette.getContrastText(palette.info.dark)));\n      setColor(palette.Alert, 'successFilledColor', silent(() => darkPalette.getContrastText(palette.success.dark)));\n      setColor(palette.Alert, 'warningFilledColor', silent(() => darkPalette.getContrastText(palette.warning.dark)));\n      setColor(palette.Alert, 'errorStandardBg', (0, _system.private_safeDarken)(palette.error.light, 0.9));\n      setColor(palette.Alert, 'infoStandardBg', (0, _system.private_safeDarken)(palette.info.light, 0.9));\n      setColor(palette.Alert, 'successStandardBg', (0, _system.private_safeDarken)(palette.success.light, 0.9));\n      setColor(palette.Alert, 'warningStandardBg', (0, _system.private_safeDarken)(palette.warning.light, 0.9));\n      setColor(palette.Alert, 'errorIconColor', getCssVar('palette-error-main'));\n      setColor(palette.Alert, 'infoIconColor', getCssVar('palette-info-main'));\n      setColor(palette.Alert, 'successIconColor', getCssVar('palette-success-main'));\n      setColor(palette.Alert, 'warningIconColor', getCssVar('palette-warning-main'));\n      setColor(palette.AppBar, 'defaultBg', getCssVar('palette-grey-900'));\n      setColor(palette.AppBar, 'darkBg', getCssVar('palette-background-paper')); // specific for dark mode\n\n      setColor(palette.AppBar, 'darkColor', getCssVar('palette-text-primary')); // specific for dark mode\n\n      setColor(palette.Avatar, 'defaultBg', getCssVar('palette-grey-600'));\n      setColor(palette.Chip, 'defaultBorder', getCssVar('palette-grey-700'));\n      setColor(palette.Chip, 'defaultAvatarColor', getCssVar('palette-grey-300'));\n      setColor(palette.Chip, 'defaultIconColor', getCssVar('palette-grey-300'));\n      setColor(palette.FilledInput, 'bg', 'rgba(255, 255, 255, 0.09)');\n      setColor(palette.FilledInput, 'hoverBg', 'rgba(255, 255, 255, 0.13)');\n      setColor(palette.FilledInput, 'disabledBg', 'rgba(255, 255, 255, 0.12)');\n      setColor(palette.LinearProgress, 'primaryBg', (0, _system.private_safeDarken)(palette.primary.main, 0.5));\n      setColor(palette.LinearProgress, 'secondaryBg', (0, _system.private_safeDarken)(palette.secondary.main, 0.5));\n      setColor(palette.LinearProgress, 'errorBg', (0, _system.private_safeDarken)(palette.error.main, 0.5));\n      setColor(palette.LinearProgress, 'infoBg', (0, _system.private_safeDarken)(palette.info.main, 0.5));\n      setColor(palette.LinearProgress, 'successBg', (0, _system.private_safeDarken)(palette.success.main, 0.5));\n      setColor(palette.LinearProgress, 'warningBg', (0, _system.private_safeDarken)(palette.warning.main, 0.5));\n      setColor(palette.Skeleton, 'bg', `rgba(${getCssVar('palette-text-primaryChannel')} / 0.13)`);\n      setColor(palette.Slider, 'primaryTrack', (0, _system.private_safeDarken)(palette.primary.main, 0.5));\n      setColor(palette.Slider, 'secondaryTrack', (0, _system.private_safeDarken)(palette.secondary.main, 0.5));\n      setColor(palette.Slider, 'errorTrack', (0, _system.private_safeDarken)(palette.error.main, 0.5));\n      setColor(palette.Slider, 'infoTrack', (0, _system.private_safeDarken)(palette.info.main, 0.5));\n      setColor(palette.Slider, 'successTrack', (0, _system.private_safeDarken)(palette.success.main, 0.5));\n      setColor(palette.Slider, 'warningTrack', (0, _system.private_safeDarken)(palette.warning.main, 0.5));\n      const snackbarContentBackground = (0, _system.private_safeEmphasize)(palette.background.default, 0.98);\n      setColor(palette.SnackbarContent, 'bg', snackbarContentBackground);\n      setColor(palette.SnackbarContent, 'color', silent(() => darkPalette.getContrastText(snackbarContentBackground)));\n      setColor(palette.SpeedDialAction, 'fabHoverBg', (0, _system.private_safeEmphasize)(palette.background.paper, 0.15));\n      setColor(palette.StepConnector, 'border', getCssVar('palette-grey-600'));\n      setColor(palette.StepContent, 'border', getCssVar('palette-grey-600'));\n      setColor(palette.Switch, 'defaultColor', getCssVar('palette-grey-300'));\n      setColor(palette.Switch, 'defaultDisabledColor', getCssVar('palette-grey-600'));\n      setColor(palette.Switch, 'primaryDisabledColor', (0, _system.private_safeDarken)(palette.primary.main, 0.55));\n      setColor(palette.Switch, 'secondaryDisabledColor', (0, _system.private_safeDarken)(palette.secondary.main, 0.55));\n      setColor(palette.Switch, 'errorDisabledColor', (0, _system.private_safeDarken)(palette.error.main, 0.55));\n      setColor(palette.Switch, 'infoDisabledColor', (0, _system.private_safeDarken)(palette.info.main, 0.55));\n      setColor(palette.Switch, 'successDisabledColor', (0, _system.private_safeDarken)(palette.success.main, 0.55));\n      setColor(palette.Switch, 'warningDisabledColor', (0, _system.private_safeDarken)(palette.warning.main, 0.55));\n      setColor(palette.TableCell, 'border', (0, _system.private_safeDarken)((0, _system.private_safeAlpha)(palette.divider, 1), 0.68));\n      setColor(palette.Tooltip, 'bg', (0, _system.private_safeAlpha)(palette.grey[700], 0.92));\n    }\n\n    setColor(palette.background, 'defaultChannel', (0, _system.private_safeColorChannel)(palette.background.default, 'MUI: The value of `palette.background.default` should be one of these formats: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color().')); // MUI X - DataGrid needs this token.\n\n    setColor(palette.common, 'backgroundChannel', (0, _system.private_safeColorChannel)(palette.common.background, 'MUI: The value of `palette.common.background` should be one of these formats: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color().'));\n    setColor(palette.common, 'onBackgroundChannel', (0, _system.private_safeColorChannel)(palette.common.onBackground, 'MUI: The value of `palette.common.onBackground` should be one of these formats: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color().'));\n    setColor(palette, 'dividerChannel', (0, _system.private_safeColorChannel)(palette.divider, 'MUI: The value of `palette.divider` should be one of these formats: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color().'));\n    Object.keys(palette).forEach(color => {\n      const colors = palette[color]; // The default palettes (primary, secondary, error, info, success, and warning) errors are handled by the above `createTheme(...)`.\n\n      if (colors && typeof colors === 'object') {\n        // Silent the error for custom palettes.\n        if (colors.main) {\n          setColor(palette[color], 'mainChannel', (0, _system.private_safeColorChannel)(colors.main));\n        }\n\n        if (colors.light) {\n          setColor(palette[color], 'lightChannel', (0, _system.private_safeColorChannel)(colors.light));\n        }\n\n        if (colors.dark) {\n          setColor(palette[color], 'darkChannel', (0, _system.private_safeColorChannel)(colors.dark));\n        }\n\n        if (colors.contrastText) {\n          setColor(palette[color], 'contrastTextChannel', (0, _system.private_safeColorChannel)(colors.contrastText));\n        }\n\n        if (color === 'text') {\n          // Text colors: text.primary, text.secondary\n          setColor(palette[color], 'primaryChannel', (0, _system.private_safeColorChannel)(colors.primary, 'MUI: The value of `palette.text.primary` should be one of these formats: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color().'));\n          setColor(palette[color], 'secondaryChannel', (0, _system.private_safeColorChannel)(colors.secondary, 'MUI: The value of `palette.text.secondary` should be one of these formats: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color().'));\n        }\n\n        if (color === 'action') {\n          // Action colors: action.active, action.selected\n          if (colors.active) {\n            setColor(palette[color], 'activeChannel', (0, _system.private_safeColorChannel)(colors.active, 'MUI: The value of `palette.action.active` should be one of these formats: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color().'));\n          }\n\n          if (colors.selected) {\n            setColor(palette[color], 'selectedChannel', (0, _system.private_safeColorChannel)(colors.selected, 'MUI: The value of `palette.action.selected` should be one of these formats: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color().'));\n          }\n        }\n      }\n    });\n  });\n\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  theme = args.reduce((acc, argument) => (0, _utils.deepmerge)(acc, argument), theme);\n  theme.unstable_sxConfig = (0, _extends2.default)({}, _system.unstable_defaultSxConfig, input == null ? void 0 : input.unstable_sxConfig);\n\n  theme.unstable_sx = function sx(props) {\n    return (0, _system.unstable_styleFunctionSx)({\n      sx: props,\n      theme: this\n    });\n  };\n\n  return theme;\n}","map":{"version":3,"sources":["D:/Full Stack Projects/ajmera-infotech/books-frontend/node_modules/@mui/material/node/styles/experimental_extendTheme.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","createGetCssVar","default","extendTheme","_extends2","_objectWithoutPropertiesLoose2","_utils","_system","_createTheme","_getOverlayAlpha","_excluded","_excluded2","defaultDarkOverlays","Array","map","_","index","undefined","overlay","assignNode","obj","keys","forEach","k","setColor","key","defaultValue","silent","fn","error","cssVarPrefix","unstable_createGetCssVar","options","_colorSchemesInput$li","_colorSchemesInput$da","_colorSchemesInput$li2","_colorSchemesInput$li3","_colorSchemesInput$da2","_colorSchemesInput$da3","colorSchemes","colorSchemesInput","input","getCssVar","_createThemeWithoutVa","light","palette","lightPalette","muiTheme","darkPalette","mode","dark","theme","opacity","inputPlaceholder","inputUnderline","switchTrackDisabled","switchTrack","overlays","common","Alert","private_safeDarken","info","success","warning","getContrastText","main","private_safeLighten","AppBar","Avatar","Chip","FilledInput","LinearProgress","primary","secondary","Skeleton","Slider","snackbarContentBackground","private_safeEmphasize","background","SnackbarContent","SpeedDialAction","paper","StepConnector","StepContent","Switch","TableCell","private_safeAlpha","divider","Tooltip","grey","private_safeColorChannel","onBackground","color","colors","contrastText","active","selected","args","reduce","acc","argument","deepmerge","unstable_sxConfig","unstable_defaultSxConfig","unstable_sx","sx","props","unstable_styleFunctionSx"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createGetCssVar = void 0;\nexports.default = extendTheme;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\nvar _utils = require(\"@mui/utils\");\nvar _system = require(\"@mui/system\");\nvar _createTheme = _interopRequireDefault(require(\"./createTheme\"));\nvar _getOverlayAlpha = _interopRequireDefault(require(\"./getOverlayAlpha\"));\nconst _excluded = [\"colorSchemes\", \"cssVarPrefix\"],\n  _excluded2 = [\"palette\"];\nconst defaultDarkOverlays = [...Array(25)].map((_, index) => {\n  if (index === 0) {\n    return undefined;\n  }\n  const overlay = (0, _getOverlayAlpha.default)(index);\n  return `linear-gradient(rgba(255 255 255 / ${overlay}), rgba(255 255 255 / ${overlay}))`;\n});\nfunction assignNode(obj, keys) {\n  keys.forEach(k => {\n    if (!obj[k]) {\n      obj[k] = {};\n    }\n  });\n}\nfunction setColor(obj, key, defaultValue) {\n  if (!obj[key] && defaultValue) {\n    obj[key] = defaultValue;\n  }\n}\nconst silent = fn => {\n  try {\n    return fn();\n  } catch (error) {\n    // ignore error\n  }\n  return undefined;\n};\nconst createGetCssVar = (cssVarPrefix = 'mui') => (0, _system.unstable_createGetCssVar)(cssVarPrefix);\nexports.createGetCssVar = createGetCssVar;\nfunction extendTheme(options = {}, ...args) {\n  var _colorSchemesInput$li, _colorSchemesInput$da, _colorSchemesInput$li2, _colorSchemesInput$li3, _colorSchemesInput$da2, _colorSchemesInput$da3;\n  const {\n      colorSchemes: colorSchemesInput = {},\n      cssVarPrefix = 'mui'\n    } = options,\n    input = (0, _objectWithoutPropertiesLoose2.default)(options, _excluded);\n  const getCssVar = createGetCssVar(cssVarPrefix);\n  const _createThemeWithoutVa = (0, _createTheme.default)((0, _extends2.default)({}, input, colorSchemesInput.light && {\n      palette: (_colorSchemesInput$li = colorSchemesInput.light) == null ? void 0 : _colorSchemesInput$li.palette\n    })),\n    {\n      palette: lightPalette\n    } = _createThemeWithoutVa,\n    muiTheme = (0, _objectWithoutPropertiesLoose2.default)(_createThemeWithoutVa, _excluded2);\n  const {\n    palette: darkPalette\n  } = (0, _createTheme.default)({\n    palette: (0, _extends2.default)({\n      mode: 'dark'\n    }, (_colorSchemesInput$da = colorSchemesInput.dark) == null ? void 0 : _colorSchemesInput$da.palette)\n  });\n  let theme = (0, _extends2.default)({}, muiTheme, {\n    cssVarPrefix,\n    getCssVar,\n    colorSchemes: (0, _extends2.default)({}, colorSchemesInput, {\n      light: (0, _extends2.default)({}, colorSchemesInput.light, {\n        palette: lightPalette,\n        opacity: (0, _extends2.default)({\n          inputPlaceholder: 0.42,\n          inputUnderline: 0.42,\n          switchTrackDisabled: 0.12,\n          switchTrack: 0.38\n        }, (_colorSchemesInput$li2 = colorSchemesInput.light) == null ? void 0 : _colorSchemesInput$li2.opacity),\n        overlays: ((_colorSchemesInput$li3 = colorSchemesInput.light) == null ? void 0 : _colorSchemesInput$li3.overlays) || []\n      }),\n      dark: (0, _extends2.default)({}, colorSchemesInput.dark, {\n        palette: darkPalette,\n        opacity: (0, _extends2.default)({\n          inputPlaceholder: 0.5,\n          inputUnderline: 0.7,\n          switchTrackDisabled: 0.2,\n          switchTrack: 0.3\n        }, (_colorSchemesInput$da2 = colorSchemesInput.dark) == null ? void 0 : _colorSchemesInput$da2.opacity),\n        overlays: ((_colorSchemesInput$da3 = colorSchemesInput.dark) == null ? void 0 : _colorSchemesInput$da3.overlays) || defaultDarkOverlays\n      })\n    })\n  });\n  Object.keys(theme.colorSchemes).forEach(key => {\n    const palette = theme.colorSchemes[key].palette;\n\n    // attach black & white channels to common node\n    if (key === 'light') {\n      setColor(palette.common, 'background', '#fff');\n      setColor(palette.common, 'onBackground', '#000');\n    } else {\n      setColor(palette.common, 'background', '#000');\n      setColor(palette.common, 'onBackground', '#fff');\n    }\n\n    // assign component variables\n    assignNode(palette, ['Alert', 'AppBar', 'Avatar', 'Chip', 'FilledInput', 'LinearProgress', 'Skeleton', 'Slider', 'SnackbarContent', 'SpeedDialAction', 'StepConnector', 'StepContent', 'Switch', 'TableCell', 'Tooltip']);\n    if (key === 'light') {\n      setColor(palette.Alert, 'errorColor', (0, _system.private_safeDarken)(palette.error.light, 0.6));\n      setColor(palette.Alert, 'infoColor', (0, _system.private_safeDarken)(palette.info.light, 0.6));\n      setColor(palette.Alert, 'successColor', (0, _system.private_safeDarken)(palette.success.light, 0.6));\n      setColor(palette.Alert, 'warningColor', (0, _system.private_safeDarken)(palette.warning.light, 0.6));\n      setColor(palette.Alert, 'errorFilledBg', getCssVar('palette-error-main'));\n      setColor(palette.Alert, 'infoFilledBg', getCssVar('palette-info-main'));\n      setColor(palette.Alert, 'successFilledBg', getCssVar('palette-success-main'));\n      setColor(palette.Alert, 'warningFilledBg', getCssVar('palette-warning-main'));\n      setColor(palette.Alert, 'errorFilledColor', silent(() => lightPalette.getContrastText(palette.error.main)));\n      setColor(palette.Alert, 'infoFilledColor', silent(() => lightPalette.getContrastText(palette.info.main)));\n      setColor(palette.Alert, 'successFilledColor', silent(() => lightPalette.getContrastText(palette.success.main)));\n      setColor(palette.Alert, 'warningFilledColor', silent(() => lightPalette.getContrastText(palette.warning.main)));\n      setColor(palette.Alert, 'errorStandardBg', (0, _system.private_safeLighten)(palette.error.light, 0.9));\n      setColor(palette.Alert, 'infoStandardBg', (0, _system.private_safeLighten)(palette.info.light, 0.9));\n      setColor(palette.Alert, 'successStandardBg', (0, _system.private_safeLighten)(palette.success.light, 0.9));\n      setColor(palette.Alert, 'warningStandardBg', (0, _system.private_safeLighten)(palette.warning.light, 0.9));\n      setColor(palette.Alert, 'errorIconColor', getCssVar('palette-error-main'));\n      setColor(palette.Alert, 'infoIconColor', getCssVar('palette-info-main'));\n      setColor(palette.Alert, 'successIconColor', getCssVar('palette-success-main'));\n      setColor(palette.Alert, 'warningIconColor', getCssVar('palette-warning-main'));\n      setColor(palette.AppBar, 'defaultBg', getCssVar('palette-grey-100'));\n      setColor(palette.Avatar, 'defaultBg', getCssVar('palette-grey-400'));\n      setColor(palette.Chip, 'defaultBorder', getCssVar('palette-grey-400'));\n      setColor(palette.Chip, 'defaultAvatarColor', getCssVar('palette-grey-700'));\n      setColor(palette.Chip, 'defaultIconColor', getCssVar('palette-grey-700'));\n      setColor(palette.FilledInput, 'bg', 'rgba(0, 0, 0, 0.06)');\n      setColor(palette.FilledInput, 'hoverBg', 'rgba(0, 0, 0, 0.09)');\n      setColor(palette.FilledInput, 'disabledBg', 'rgba(0, 0, 0, 0.12)');\n      setColor(palette.LinearProgress, 'primaryBg', (0, _system.private_safeLighten)(palette.primary.main, 0.62));\n      setColor(palette.LinearProgress, 'secondaryBg', (0, _system.private_safeLighten)(palette.secondary.main, 0.62));\n      setColor(palette.LinearProgress, 'errorBg', (0, _system.private_safeLighten)(palette.error.main, 0.62));\n      setColor(palette.LinearProgress, 'infoBg', (0, _system.private_safeLighten)(palette.info.main, 0.62));\n      setColor(palette.LinearProgress, 'successBg', (0, _system.private_safeLighten)(palette.success.main, 0.62));\n      setColor(palette.LinearProgress, 'warningBg', (0, _system.private_safeLighten)(palette.warning.main, 0.62));\n      setColor(palette.Skeleton, 'bg', `rgba(${getCssVar('palette-text-primaryChannel')} / 0.11)`);\n      setColor(palette.Slider, 'primaryTrack', (0, _system.private_safeLighten)(palette.primary.main, 0.62));\n      setColor(palette.Slider, 'secondaryTrack', (0, _system.private_safeLighten)(palette.secondary.main, 0.62));\n      setColor(palette.Slider, 'errorTrack', (0, _system.private_safeLighten)(palette.error.main, 0.62));\n      setColor(palette.Slider, 'infoTrack', (0, _system.private_safeLighten)(palette.info.main, 0.62));\n      setColor(palette.Slider, 'successTrack', (0, _system.private_safeLighten)(palette.success.main, 0.62));\n      setColor(palette.Slider, 'warningTrack', (0, _system.private_safeLighten)(palette.warning.main, 0.62));\n      const snackbarContentBackground = (0, _system.private_safeEmphasize)(palette.background.default, 0.8);\n      setColor(palette.SnackbarContent, 'bg', snackbarContentBackground);\n      setColor(palette.SnackbarContent, 'color', silent(() => lightPalette.getContrastText(snackbarContentBackground)));\n      setColor(palette.SpeedDialAction, 'fabHoverBg', (0, _system.private_safeEmphasize)(palette.background.paper, 0.15));\n      setColor(palette.StepConnector, 'border', getCssVar('palette-grey-400'));\n      setColor(palette.StepContent, 'border', getCssVar('palette-grey-400'));\n      setColor(palette.Switch, 'defaultColor', getCssVar('palette-common-white'));\n      setColor(palette.Switch, 'defaultDisabledColor', getCssVar('palette-grey-100'));\n      setColor(palette.Switch, 'primaryDisabledColor', (0, _system.private_safeLighten)(palette.primary.main, 0.62));\n      setColor(palette.Switch, 'secondaryDisabledColor', (0, _system.private_safeLighten)(palette.secondary.main, 0.62));\n      setColor(palette.Switch, 'errorDisabledColor', (0, _system.private_safeLighten)(palette.error.main, 0.62));\n      setColor(palette.Switch, 'infoDisabledColor', (0, _system.private_safeLighten)(palette.info.main, 0.62));\n      setColor(palette.Switch, 'successDisabledColor', (0, _system.private_safeLighten)(palette.success.main, 0.62));\n      setColor(palette.Switch, 'warningDisabledColor', (0, _system.private_safeLighten)(palette.warning.main, 0.62));\n      setColor(palette.TableCell, 'border', (0, _system.private_safeLighten)((0, _system.private_safeAlpha)(palette.divider, 1), 0.88));\n      setColor(palette.Tooltip, 'bg', (0, _system.private_safeAlpha)(palette.grey[700], 0.92));\n    } else {\n      setColor(palette.Alert, 'errorColor', (0, _system.private_safeLighten)(palette.error.light, 0.6));\n      setColor(palette.Alert, 'infoColor', (0, _system.private_safeLighten)(palette.info.light, 0.6));\n      setColor(palette.Alert, 'successColor', (0, _system.private_safeLighten)(palette.success.light, 0.6));\n      setColor(palette.Alert, 'warningColor', (0, _system.private_safeLighten)(palette.warning.light, 0.6));\n      setColor(palette.Alert, 'errorFilledBg', getCssVar('palette-error-dark'));\n      setColor(palette.Alert, 'infoFilledBg', getCssVar('palette-info-dark'));\n      setColor(palette.Alert, 'successFilledBg', getCssVar('palette-success-dark'));\n      setColor(palette.Alert, 'warningFilledBg', getCssVar('palette-warning-dark'));\n      setColor(palette.Alert, 'errorFilledColor', silent(() => darkPalette.getContrastText(palette.error.dark)));\n      setColor(palette.Alert, 'infoFilledColor', silent(() => darkPalette.getContrastText(palette.info.dark)));\n      setColor(palette.Alert, 'successFilledColor', silent(() => darkPalette.getContrastText(palette.success.dark)));\n      setColor(palette.Alert, 'warningFilledColor', silent(() => darkPalette.getContrastText(palette.warning.dark)));\n      setColor(palette.Alert, 'errorStandardBg', (0, _system.private_safeDarken)(palette.error.light, 0.9));\n      setColor(palette.Alert, 'infoStandardBg', (0, _system.private_safeDarken)(palette.info.light, 0.9));\n      setColor(palette.Alert, 'successStandardBg', (0, _system.private_safeDarken)(palette.success.light, 0.9));\n      setColor(palette.Alert, 'warningStandardBg', (0, _system.private_safeDarken)(palette.warning.light, 0.9));\n      setColor(palette.Alert, 'errorIconColor', getCssVar('palette-error-main'));\n      setColor(palette.Alert, 'infoIconColor', getCssVar('palette-info-main'));\n      setColor(palette.Alert, 'successIconColor', getCssVar('palette-success-main'));\n      setColor(palette.Alert, 'warningIconColor', getCssVar('palette-warning-main'));\n      setColor(palette.AppBar, 'defaultBg', getCssVar('palette-grey-900'));\n      setColor(palette.AppBar, 'darkBg', getCssVar('palette-background-paper')); // specific for dark mode\n      setColor(palette.AppBar, 'darkColor', getCssVar('palette-text-primary')); // specific for dark mode\n      setColor(palette.Avatar, 'defaultBg', getCssVar('palette-grey-600'));\n      setColor(palette.Chip, 'defaultBorder', getCssVar('palette-grey-700'));\n      setColor(palette.Chip, 'defaultAvatarColor', getCssVar('palette-grey-300'));\n      setColor(palette.Chip, 'defaultIconColor', getCssVar('palette-grey-300'));\n      setColor(palette.FilledInput, 'bg', 'rgba(255, 255, 255, 0.09)');\n      setColor(palette.FilledInput, 'hoverBg', 'rgba(255, 255, 255, 0.13)');\n      setColor(palette.FilledInput, 'disabledBg', 'rgba(255, 255, 255, 0.12)');\n      setColor(palette.LinearProgress, 'primaryBg', (0, _system.private_safeDarken)(palette.primary.main, 0.5));\n      setColor(palette.LinearProgress, 'secondaryBg', (0, _system.private_safeDarken)(palette.secondary.main, 0.5));\n      setColor(palette.LinearProgress, 'errorBg', (0, _system.private_safeDarken)(palette.error.main, 0.5));\n      setColor(palette.LinearProgress, 'infoBg', (0, _system.private_safeDarken)(palette.info.main, 0.5));\n      setColor(palette.LinearProgress, 'successBg', (0, _system.private_safeDarken)(palette.success.main, 0.5));\n      setColor(palette.LinearProgress, 'warningBg', (0, _system.private_safeDarken)(palette.warning.main, 0.5));\n      setColor(palette.Skeleton, 'bg', `rgba(${getCssVar('palette-text-primaryChannel')} / 0.13)`);\n      setColor(palette.Slider, 'primaryTrack', (0, _system.private_safeDarken)(palette.primary.main, 0.5));\n      setColor(palette.Slider, 'secondaryTrack', (0, _system.private_safeDarken)(palette.secondary.main, 0.5));\n      setColor(palette.Slider, 'errorTrack', (0, _system.private_safeDarken)(palette.error.main, 0.5));\n      setColor(palette.Slider, 'infoTrack', (0, _system.private_safeDarken)(palette.info.main, 0.5));\n      setColor(palette.Slider, 'successTrack', (0, _system.private_safeDarken)(palette.success.main, 0.5));\n      setColor(palette.Slider, 'warningTrack', (0, _system.private_safeDarken)(palette.warning.main, 0.5));\n      const snackbarContentBackground = (0, _system.private_safeEmphasize)(palette.background.default, 0.98);\n      setColor(palette.SnackbarContent, 'bg', snackbarContentBackground);\n      setColor(palette.SnackbarContent, 'color', silent(() => darkPalette.getContrastText(snackbarContentBackground)));\n      setColor(palette.SpeedDialAction, 'fabHoverBg', (0, _system.private_safeEmphasize)(palette.background.paper, 0.15));\n      setColor(palette.StepConnector, 'border', getCssVar('palette-grey-600'));\n      setColor(palette.StepContent, 'border', getCssVar('palette-grey-600'));\n      setColor(palette.Switch, 'defaultColor', getCssVar('palette-grey-300'));\n      setColor(palette.Switch, 'defaultDisabledColor', getCssVar('palette-grey-600'));\n      setColor(palette.Switch, 'primaryDisabledColor', (0, _system.private_safeDarken)(palette.primary.main, 0.55));\n      setColor(palette.Switch, 'secondaryDisabledColor', (0, _system.private_safeDarken)(palette.secondary.main, 0.55));\n      setColor(palette.Switch, 'errorDisabledColor', (0, _system.private_safeDarken)(palette.error.main, 0.55));\n      setColor(palette.Switch, 'infoDisabledColor', (0, _system.private_safeDarken)(palette.info.main, 0.55));\n      setColor(palette.Switch, 'successDisabledColor', (0, _system.private_safeDarken)(palette.success.main, 0.55));\n      setColor(palette.Switch, 'warningDisabledColor', (0, _system.private_safeDarken)(palette.warning.main, 0.55));\n      setColor(palette.TableCell, 'border', (0, _system.private_safeDarken)((0, _system.private_safeAlpha)(palette.divider, 1), 0.68));\n      setColor(palette.Tooltip, 'bg', (0, _system.private_safeAlpha)(palette.grey[700], 0.92));\n    }\n    setColor(palette.background, 'defaultChannel', (0, _system.private_safeColorChannel)(palette.background.default, 'MUI: The value of `palette.background.default` should be one of these formats: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color().')); // MUI X - DataGrid needs this token.\n\n    setColor(palette.common, 'backgroundChannel', (0, _system.private_safeColorChannel)(palette.common.background, 'MUI: The value of `palette.common.background` should be one of these formats: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color().'));\n    setColor(palette.common, 'onBackgroundChannel', (0, _system.private_safeColorChannel)(palette.common.onBackground, 'MUI: The value of `palette.common.onBackground` should be one of these formats: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color().'));\n    setColor(palette, 'dividerChannel', (0, _system.private_safeColorChannel)(palette.divider, 'MUI: The value of `palette.divider` should be one of these formats: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color().'));\n    Object.keys(palette).forEach(color => {\n      const colors = palette[color];\n\n      // The default palettes (primary, secondary, error, info, success, and warning) errors are handled by the above `createTheme(...)`.\n\n      if (colors && typeof colors === 'object') {\n        // Silent the error for custom palettes.\n        if (colors.main) {\n          setColor(palette[color], 'mainChannel', (0, _system.private_safeColorChannel)(colors.main));\n        }\n        if (colors.light) {\n          setColor(palette[color], 'lightChannel', (0, _system.private_safeColorChannel)(colors.light));\n        }\n        if (colors.dark) {\n          setColor(palette[color], 'darkChannel', (0, _system.private_safeColorChannel)(colors.dark));\n        }\n        if (colors.contrastText) {\n          setColor(palette[color], 'contrastTextChannel', (0, _system.private_safeColorChannel)(colors.contrastText));\n        }\n        if (color === 'text') {\n          // Text colors: text.primary, text.secondary\n          setColor(palette[color], 'primaryChannel', (0, _system.private_safeColorChannel)(colors.primary, 'MUI: The value of `palette.text.primary` should be one of these formats: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color().'));\n          setColor(palette[color], 'secondaryChannel', (0, _system.private_safeColorChannel)(colors.secondary, 'MUI: The value of `palette.text.secondary` should be one of these formats: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color().'));\n        }\n        if (color === 'action') {\n          // Action colors: action.active, action.selected\n          if (colors.active) {\n            setColor(palette[color], 'activeChannel', (0, _system.private_safeColorChannel)(colors.active, 'MUI: The value of `palette.action.active` should be one of these formats: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color().'));\n          }\n          if (colors.selected) {\n            setColor(palette[color], 'selectedChannel', (0, _system.private_safeColorChannel)(colors.selected, 'MUI: The value of `palette.action.selected` should be one of these formats: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color().'));\n          }\n        }\n      }\n    });\n  });\n  theme = args.reduce((acc, argument) => (0, _utils.deepmerge)(acc, argument), theme);\n  theme.unstable_sxConfig = (0, _extends2.default)({}, _system.unstable_defaultSxConfig, input == null ? void 0 : input.unstable_sxConfig);\n  theme.unstable_sx = function sx(props) {\n    return (0, _system.unstable_styleFunctionSx)({\n      sx: props,\n      theme: this\n    });\n  };\n  return theme;\n}"]},"metadata":{},"sourceType":"script"}